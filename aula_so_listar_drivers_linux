




Drivers
-----------------------------------------------------------

lspci -v (lista os dispositivos PCI, incluindo o driver utilizado no kernel).
lsusb (lista os dispositivos USB conectados)
lscpu (mostra informações do processador)
lsscsi (lista dispositivos scsi, ATA, SATA)
lsmod (lista os modulos carregados no kernel)


fonte: https://www.vivaolinux.com.br/topico/Notebooks/Identificando-os-drivers

-----------------------------------------------------

lsmod | grep usb

----------------------------
Processos
fonte: https://canaltech.com.br/linux/conheca-6-comandos-para-gerenciar-processos-do-linux/

1. top

O comando top é a maneira mais comum de verificar o uso de processos do sistema e constatar quais deles estão consumindo mais memória ou processamento. 
Note que os primeiros itens da lista são os que mais consomem recursos do computador. 

2. ps

O comando ps lista os processos em execução no sistema. Porém, diferentemente do top, ele não traz informações sobre o quanto de processamento 
ou de memória ele está consumindo. Apesar disso, o ps é uma maneira bem mais ágil de consultar o PID de um processo, principalmente ao ser usado em conjunto com o grep.

Para saber qual é o PID do vim, por exemplo, um usuário poderia executar ps aux | grep -i vim.
Antes de de executá-lo, no entanto, vamos entender o que faz cada parte desse comando: as opções aux garantem que o ps exiba 
processos de todos os usuários (a), o nome do usuário responsável pelo processo (u) e também aqueles processos que não estão, necessariamente, 
sendo executados naquele terminal (x). A barra vertical, ou pipe (|), faz com que o resultado seja direcionado para o comando grep que,
por sua vez filtrará apenas as linhas que tenham a palavra vim.

3. pstree

Também há uma forma de visualizar os processos em forma de árvore, tornando mais visível as relações entre eles. Para isso, basta usar o comando pstree.

6. renice

Todos os processos do Linux possuem prioridades de execução, variando em uma escala que vai de 19 (menos significativa) a -20 (mais significativa).
Por padrão, os processos executados por um usuário ganham a prioridade 0, mas por meio do comando renice é possível alterar esse valor para algum nível entre 0 e 19. Apenas o usuário administrador (root) é capaz de ir além, alterando prioridades de qualquer processo e chegando até o nível máximo de -20.

Para realizar esse tipo de operação, basta seguir a sintaxe renice novaprioridade -p PID. Se quiséssemos dar mais prioridade a um processo de PID 1516, por exemplo, usaríamos: sudo renice -10 -p 1516. Lembre-se que o sudo exigirá a senha do seu usuário antes de executar o comando.
